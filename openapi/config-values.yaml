type: object
properties:
  nodeSelector:
    type: object
    additionalProperties:
      type: string
    description: |
      The same as in the Pods' `spec.nodeSelector` parameter in Kubernetes.
      If the parameter is omitted or `false`, `nodeSelector` will be determined [automatically](https://deckhouse.io/documentation/v1/#advanced-scheduling).
  tolerations:
    type: array
    description: |
      The same as in the Pods' `spec.tolerations` parameter in Kubernetes;
      If the parameter is omitted or `false`, `tolerations` will be determined [automatically](https://deckhouse.io/documentation/v1/#advanced-scheduling).
    items:
      type: object
      properties:
        effect:
          type: string
        key:
          type: string
        operator:
          type: string
        tolerationSeconds:
          type: integer
          format: int64
        value:
          type: string
  resourcesManagement:
    description: |
      Rook Ceph Operator resources management options.
    default: {}
    x-examples:
      - mode: VPA
        vpa:
          mode: Auto
          cpu:
            min: 50m
            max: 250m
            limitRatio: 1.5
          memory:
            min: 256Mi
            max: 512Mi
            limitRatio: 1.5
      - mode: Static
        static:
          requests:
            cpu: 55m
            memory: 256Mi
          limits:
            cpu: 250m
            memory: 512Mi
    properties:
      mode:
        type: string
        description: >
          The mode for managing resource requests. Classical `Static`
          requests/limit or `VPA`.
        enum:
          - VPA
          - Static
        default: VPA
      vpa:
        type: object
        default: {}
        description: |
          Parameters of the VPA mode.
        properties:
          mode:
            type: string
            description: |
              The VPA usage mode.
            enum:
              - Initial
              - Auto
            default: Auto
          cpu:
            type: object
            default: {}
            description: |
              CPU-related parameters.
            properties:
              max:
                description: |
                  Maximum allowed CPU requests.
                default: 250m
                oneOf:
                  - type: string
                    pattern: '^[0-9]+m?$'
                  - type: number
              min:
                description: |
                  Minimum allowed CPU requests.
                default: 50m
                oneOf:
                  - type: string
                    pattern: '^[0-9]+m?$'
                  - type: number
              limitRatio:
                type: number
                examples:
                  - 1.5
                description: >
                  The coefficient to calculate cpu limits. It is optionally used
                  to calculate initial limits for Pod. VPA for its part keeps
                  the initial limits/requests ratio during further resource
                  tunings.
          memory:
            type: object
            default: {}
            description: |
              The amount of memory requested.
            properties:
              max:
                description: |
                  Maximum allowed memory requests.
                default: 512Mi
                oneOf:
                  - type: string
                    pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
                  - type: number
              min:
                description: |
                  Minimum allowed memory requests.
                default: 256Mi
                oneOf:
                  - type: string
                    pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
                  - type: number
              limitRatio:
                type: number
                examples:
                  - 1.5
                description: >
                  The coefficient to calculate memory limits. It is optionally
                  used to calculate initial limits for Pod. VPA for its part
                  keeps the initial limits/requests ratio during further
                  resource tunings.
      static:
        type: object
        description: |
          Static resource management settings.
        properties:
          requests:
            type: object
            description: |
              Requests configuration.
            properties:
              cpu:
                oneOf:
                  - type: string
                    pattern: '^[0-9]+m?$'
                  - type: number
                description: |
                  CPU requests.
              memory:
                oneOf:
                  - type: string
                    pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
                  - type: number
                description: |
                  Memory requests.
          limits:
            type: object
            description: |
              Limits configuration.
            properties:
              cpu:
                oneOf:
                  - type: string
                    pattern: '^[0-9]+m?$'
                  - type: number
                description: |
                  CPU limits.
              memory:
                oneOf:
                  - type: string
                    pattern: '^[0-9]+(\.[0-9]+)?(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$'
                  - type: number
                description: |
                  Memory limits.
